package selenium;

import org.openqa.selenium.*;
import org.openqa.selenium.chrome.ChromeDriver;
import org.testng.*;
import org.testng.annotations.*;

import java.util.concurrent.TimeUnit;

public class SeleniumOpenTest {

    public static WebDriver driver;

    @BeforeClass
    public static void setup() {
        driver = new ChromeDriver();
        System.setProperty("webdriver.chrome.driver", ConfigProperties.getProperty("path"));
        driver.manage().window().maximize();
        driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
        driver.get("https://www.open.ru/");
    }

    @AfterClass
    public static void testClose() throws Exception {
        driver.quit();
    }

    @Test
    public void dollarTest() throws Exception {
        WebElement dollarSale = driver.findElement(By.xpath("(//*[contains(@class,'main-page-exchange__row')][contains(.,'USD')]//*[@class='main-page-exchange__rate'])[2]"));
        WebElement dollarPurchase = driver.findElement(By.xpath("(//*[contains(@class,'main-page-exchange__row')][contains(.,'USD')]//*[@class='main-page-exchange__rate'])[1]"));

        Double dollarSaleDouble = Double.parseDouble(dollarSale.getText().replaceAll(",", "."));
        Double dollarPurchaseDouble = Double.parseDouble(dollarPurchase.getText().replaceAll(",", "."));

        Assert.assertTrue(dollarSaleDouble > dollarPurchaseDouble);
    }

    @Test
    public void euroTest() throws Exception {
        WebElement euroSale = driver.findElement(By.xpath("(//*[contains(@class,'main-page-exchange__row')][contains(.,'EUR')]//*[@class='main-page-exchange__rate'])[2]"));
        WebElement euroPurchase = driver.findElement(By.xpath("(//*[contains(@class,'main-page-exchange__row')][contains(.,'EUR')]//*[@class='main-page-exchange__rate'])[1]"));

        Double euroSaleDouble = Double.parseDouble(euroSale.getText().replaceAll(",", "."));
        Double euroPurchaseDouble = Double.parseDouble(euroPurchase.getText().replaceAll(",", "."));

        Assert.assertTrue(euroSaleDouble > euroPurchaseDouble);
    }
}
